#!/bin/bash
# /etc/init.d/steam
# version 0.3.2 2011-01-27 (YYYY-MM-DD)

### BEGIN INIT INFO
# Provides:   steam
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Valve STEAM server
# Description:    Starts the STEAM server
### END INIT INFO

#Settings
SERVICE='srcsd'
USERNAME="steam"
STEAMPATH='/home/steam/hlds/server/orangebox'
CPU_COUNT=1
INVOCATION="$STEAMPATH/srcds_run -game tf -autoupdate -tickrate 66 +map cp_badlands -steambin /home/steam/hlds/steam"

ME=`whoami`

as_user()
{
	if [ $ME == $USERNAME ]; then
		bash -c "$1"
	else
		su - $USERNAME -c "$1"
	fi
}

steam_start()
{
	if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "Tried to start but $SERVICE was already running!"
	else
		echo "$SERVICE was not running... starting."
		cd $STEAMPATH
		as_user "cd $STEAMPATH && screen -dmS steam $INVOCATION"
		sleep 7
		if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
		then
			echo "$SERVICE is now running."
		else
			echo "Could not start $SERVICE."
		fi
	fi
}

steam_stop()
{
	if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
	then
		echo "$SERVICE is running... stopping."
		as_user "screen -p 0 -S steam -X eval 'stuff \"say SERVER SHUTTING DOWN IN 10 SECONDS.\"\015'"
		sleep 10
		as_user "screen -p 0 -S steam -X eval 'stuff \"stop\"\015'"
		sleep 7
        else
                echo "$SERVICE was not running."
        fi
        if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
        then
                echo "$SERVICE could not be shut down... still running."
        else
                echo "$SERVICE is shut down."
        fi
}

steam_update()
{
  if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
  then
    echo "$SERVICE is running! Will not start update."
  else
    as_user "cd $MCPATH && wget -q -O $MCPATH/minecraft_server.jar.update $MC_SERVER_URL"
    if [ -f $MCPATH/minecraft_server.jar.update ]
    then
      if `diff $MCPATH/minecraft_server.jar $MCPATH/minecraft_server.jar.update >/dev/null`
        then
          echo "You are already running the latest version of $SERVICE."
        else
          as_user "mv $MCPATH/minecraft_server.jar.update $MCPATH/minecraft_server.jar"
          echo "Minecraft successfully updated."
      fi
    else
      echo "Minecraft update could not be downloaded."
    fi
  fi
}

steam_backup()
{
   echo "Backing up minecraft world"
   FILEPOST=`date "+%Y.%m.%d"`
   as_user "cd $MCPATH && cp minecraft_server.jar \"$BACKUPPATH/minecraft_server_`date "+%Y.%m.%d"`.jar\""
   echo "Backup complete"
}

#Start-Stop here
case "$1" in
  start)
    steam_start
  ;;
  stop)
    steam_stop
  ;;
  restart)
    steam_stop
    steam_start
  ;;
  update)
    steam_stop
    steam_update
    steam_start
  ;;
  status)
    if ps ax | grep -v grep | grep -v -i SCREEN | grep $SERVICE > /dev/null
    then
      echo "$SERVICE is running."
    else
      echo "$SERVICE is not running."
    fi
  ;;

  *)
    echo "Usage: /etc/init.d/steam {start|stop|status|restart|update}"
    exit 1
  ;;
esac

exit 0
